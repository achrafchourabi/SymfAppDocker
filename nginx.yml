kind: ConfigMap
apiVersion: v1
metadata:
  name: nginx-config
data:
  nginx.conf: |
    events {
    }
    http {
        include /etc/nginx/mime.types;
      server {
      
       root /var/www/project/publictest;          
          location / {
        # try to serve file directly, fallback to app.php
              try_files $uri /app.php$is_args$args;
          }
          location ~ ^/(web/app_dev|app_dev|config)\.php(/|$) {
              fastcgi_pass 127.0.0.1:9000;
              fastcgi_split_path_info ^(.+\.php)(/.*)$;
              fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
              include fastcgi_params;
          }
          location ~ ^/app\.php(/|$) {
              fastcgi_pass 127.0.0.1:9000;
              fastcgi_split_path_info ^(.+\.php)(/.*)$;
              fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name; 
              include fastcgi_params;
              internal;
          }
          location ~ \.css {
              #root /var/www/project/public;
              expires max;
          }
          location ~* \.(jpg|jpeg|png|gif|ico|js|woff|woff2|ttf)$ {
               # root /var/www/project/public;
               access_log off;
               expires max;
          }
          location ~* \.(js|css)$ {
               expires 1y;
               log_not_found off;
          }
          rewrite ^/assets/([a-z\-]+)-([a-z0-9]+).(css|js) /assets/$1.$3; 
          error_log /var/log/nginx/project_error.log;
          access_log /var/log/nginx/project_access.log;    

      }
    }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: app

  labels:
    name: app
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 2
  selector:
    matchLabels:
      name: app
  template:
    metadata:
      name: app
      labels:
        name: app
    spec:
      volumes:
        - name: shared-files
          emptyDir: {}
        - name: nginx-config-volume
          configMap:
            name: nginx-config
      containers:
        - image: ash92/repo_achraf_chourabi:symfapplast
          name: app
          imagePullPolicy: Always
          ports:
          - containerPort: 80

          resources:
            limits:
              cpu: 300m
              memory: 200Mi
            requests:
              cpu: 250m
              memory: 150Mi
          volumeMounts:
            - name: shared-files
              mountPath: /var/www/project/publictest
          lifecycle:
            postStart:
              exec:
                command: ["/bin/sh", "-c", "cp -r /var/www/project/public/. /var/www/project/publictest"] 
        - image: nginx:alpine
          name: app-nginx
          volumeMounts:
            - name: shared-files
              mountPath: /var/www/project/publictest
            - name: nginx-config-volume
              mountPath: /etc/nginx/nginx.conf
              subPath: nginx.conf
          resources:
            limits:
              cpu: 100m
            requests:
              cpu: 50m
---
apiVersion: v1
kind: Service
metadata:
  name: app

spec:
  selector:
    name: app
  ports:
    - port: 80
      targetPort: 80
  type: LoadBalancer
